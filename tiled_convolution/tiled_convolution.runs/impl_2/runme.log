
*** Running vivado
    with args -log design_1_wrapper.vdi -applog -m64 -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace


****** Vivado v2017.3 (64-bit)
  **** SW Build 2018833 on Wed Oct  4 19:58:07 MDT 2017
  **** IP Build 2016188 on Wed Oct  4 21:52:56 MDT 2017
    ** Copyright 1986-2017 Xilinx, Inc. All Rights Reserved.

source design_1_wrapper.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository '/home/studio/Tiled_cnn_hls'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/media/dati/dante/Xilinx/Vivado/2017.3/data/ip'.
Command: link_design -top design_1_wrapper -part xc7z020clg484-1
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Netlist 29-17] Analyzing 2060 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 1 CPU seconds
WARNING: [Netlist 29-101] Netlist 'design_1_wrapper' is not ideal for floorplanning, since the cellview 'design_1_zhang_cnn_0_0' contains a large number of primitives.  Please consider enabling hierarchy in synthesis if you want to do floorplanning.
INFO: [Project 1-479] Netlist was created with Vivado 2017.3
INFO: [Device 21-403] Loading part xc7z020clg484-1
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution/tiled_convolution.srcs/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.xdc] for cell 'design_1_i/processing_system7_0/inst'
Finished Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution/tiled_convolution.srcs/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.xdc] for cell 'design_1_i/processing_system7_0/inst'
Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution/tiled_convolution.srcs/sources_1/bd/design_1/ip/design_1_rst_processing_system7_0_100M_0/design_1_rst_processing_system7_0_100M_0_board.xdc] for cell 'design_1_i/rst_processing_system7_0_100M/U0'
Finished Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution/tiled_convolution.srcs/sources_1/bd/design_1/ip/design_1_rst_processing_system7_0_100M_0/design_1_rst_processing_system7_0_100M_0_board.xdc] for cell 'design_1_i/rst_processing_system7_0_100M/U0'
Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution/tiled_convolution.srcs/sources_1/bd/design_1/ip/design_1_rst_processing_system7_0_100M_0/design_1_rst_processing_system7_0_100M_0.xdc] for cell 'design_1_i/rst_processing_system7_0_100M/U0'
Finished Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution/tiled_convolution.srcs/sources_1/bd/design_1/ip/design_1_rst_processing_system7_0_100M_0/design_1_rst_processing_system7_0_100M_0.xdc] for cell 'design_1_i/rst_processing_system7_0_100M/U0'
Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution/tiled_convolution.srcs/sources_1/bd/design_1/ip/design_1_auto_us_0/design_1_auto_us_0_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_us/inst'
Finished Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution/tiled_convolution.srcs/sources_1/bd/design_1/ip/design_1_auto_us_0/design_1_auto_us_0_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_us/inst'
Sourcing Tcl File [/media/dati/dante/Xilinx/Vivado/2017.3/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
INFO: [Timing 38-35] Done setting XDC timing constraints. [/media/dati/dante/Xilinx/Vivado/2017.3/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl:2]
all_registers: Time (s): cpu = 00:00:27 ; elapsed = 00:00:43 . Memory (MB): peak = 2108.516 ; gain = 550.508 ; free physical = 884 ; free virtual = 7761
Finished Sourcing Tcl File [/media/dati/dante/Xilinx/Vivado/2017.3/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
Sourcing Tcl File [/media/dati/dante/Xilinx/Vivado/2017.3/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
Finished Sourcing Tcl File [/media/dati/dante/Xilinx/Vivado/2017.3/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
Sourcing Tcl File [/media/dati/dante/Xilinx/Vivado/2017.3/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
Finished Sourcing Tcl File [/media/dati/dante/Xilinx/Vivado/2017.3/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 255 instances were transformed.
  RAM32M => RAM32M (RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMS32, RAMS32): 254 instances
  RAM32X1D => RAM32X1D (RAMD32, RAMD32): 1 instances

11 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:57 ; elapsed = 00:01:44 . Memory (MB): peak = 2108.523 ; gain = 947.766 ; free physical = 972 ; free virtual = 7842
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 2140.531 ; gain = 32.008 ; free physical = 967 ; free virtual = 7837
INFO: [Timing 38-35] Done setting XDC timing constraints.

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-138] Pushed 2 inverter(s) to 6 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: 228975a49

Time (s): cpu = 00:00:08 ; elapsed = 00:00:05 . Memory (MB): peak = 2140.531 ; gain = 0.000 ; free physical = 960 ; free virtual = 7830
INFO: [Opt 31-389] Phase Retarget created 16 cells and removed 2147 cells

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 7 inverter(s) to 13 load pin(s).
Phase 2 Constant propagation | Checksum: 1928ea9de

Time (s): cpu = 00:00:10 ; elapsed = 00:00:06 . Memory (MB): peak = 2140.531 ; gain = 0.000 ; free physical = 961 ; free virtual = 7832
INFO: [Opt 31-389] Phase Constant propagation created 207 cells and removed 750 cells

Phase 3 Sweep
Phase 3 Sweep | Checksum: 139c9f214

Time (s): cpu = 00:00:13 ; elapsed = 00:00:09 . Memory (MB): peak = 2140.531 ; gain = 0.000 ; free physical = 959 ; free virtual = 7830
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 462 cells

Phase 4 BUFG optimization
Phase 4 BUFG optimization | Checksum: 139c9f214

Time (s): cpu = 00:00:14 ; elapsed = 00:00:11 . Memory (MB): peak = 2140.531 ; gain = 0.000 ; free physical = 959 ; free virtual = 7830
INFO: [Opt 31-389] Phase BUFG optimization created 0 cells and removed 0 cells

Phase 5 Shift Register Optimization
Phase 5 Shift Register Optimization | Checksum: 139c9f214

Time (s): cpu = 00:00:16 ; elapsed = 00:00:13 . Memory (MB): peak = 2140.531 ; gain = 0.000 ; free physical = 960 ; free virtual = 7831
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Starting Connectivity Check Task

Time (s): cpu = 00:00:00.10 ; elapsed = 00:00:00.10 . Memory (MB): peak = 2140.531 ; gain = 0.000 ; free physical = 955 ; free virtual = 7826
Ending Logic Optimization Task | Checksum: 1b9b71164

Time (s): cpu = 00:00:18 ; elapsed = 00:00:15 . Memory (MB): peak = 2140.531 ; gain = 0.000 ; free physical = 955 ; free virtual = 7826

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Pwropt 34-9] Applying IDT optimizations ...
INFO: [Pwropt 34-10] Applying ODC optimizations ...
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=0.919 | TNS=0.000 |
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation


Starting PowerOpt Patch Enables Task
INFO: [Pwropt 34-162] WRITE_MODE attribute of 91 BRAM(s) out of a total of 150 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Pwropt 34-201] Structural ODC has moved 91 WE to EN ports
Number of BRAM Ports augmented: 31 newly gated: 92 Total Ports: 300
Ending PowerOpt Patch Enables Task | Checksum: 189a511ba

Time (s): cpu = 00:00:10 ; elapsed = 00:00:04 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 843 ; free virtual = 7718
Ending Power Optimization Task | Checksum: 189a511ba

Time (s): cpu = 00:01:34 ; elapsed = 00:00:39 . Memory (MB): peak = 2736.980 ; gain = 596.449 ; free physical = 883 ; free virtual = 7758

Starting Logic Optimization Task
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 1 Remap
Phase 1 Remap | Checksum: 168a84841

Time (s): cpu = 00:00:14 ; elapsed = 00:00:06 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 885 ; free virtual = 7760
INFO: [Opt 31-389] Phase Remap created 3 cells and removed 9 cells
Ending Logic Optimization Task | Checksum: 168a84841

Time (s): cpu = 00:00:15 ; elapsed = 00:00:06 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 885 ; free virtual = 7760
INFO: [Common 17-83] Releasing license: Implementation
35 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:02:22 ; elapsed = 00:01:09 . Memory (MB): peak = 2736.980 ; gain = 628.457 ; free physical = 885 ; free virtual = 7760
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:00.31 ; elapsed = 00:00:00.10 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 883 ; free virtual = 7760
INFO: [Common 17-1381] The checkpoint '/home/studio/VIVADO_2017/tiled_convolution/tiled_convolution.runs/impl_2/design_1_wrapper_opt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:13 ; elapsed = 00:00:11 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 880 ; free virtual = 7760
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
Command: report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Coretcl 2-168] The results of DRC are in file /home/studio/VIVADO_2017/tiled_convolution/tiled_convolution.runs/impl_2/design_1_wrapper_drc_opted.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:12 ; elapsed = 00:00:07 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 877 ; free virtual = 7758
INFO: [Chipscope 16-241] No debug cores found in the current design.
Before running the implement_debug_core command, either use the Set Up Debug wizard (GUI mode)
or use the create_debug_core and connect_debug_core Tcl commands to insert debug cores into the design.
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 4 threads
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[0] (net: design_1_i/zhang_cnn_0/m_axi_gmem_RVALID) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[1] (net: design_1_i/zhang_cnn_0/m_axi_gmem_RVALID) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[2] (net: design_1_i/zhang_cnn_0/m_axi_gmem_RVALID) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[3] (net: design_1_i/zhang_cnn_0/m_axi_gmem_RVALID) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRARDADDR[10] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRARDADDR[11] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRARDADDR[12] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRARDADDR[5] (net: design_1_i/zhang_cnn_0/mem_reg_i_8_n_4) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRARDADDR[6] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[1]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRARDADDR[7] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[2]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRARDADDR[8] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[3]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRARDADDR[9] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors, 12 Warnings
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 4 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00.07 ; elapsed = 00:00:00.07 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 876 ; free virtual = 7758
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 16ed3eaa5

Time (s): cpu = 00:00:00.09 ; elapsed = 00:00:00.13 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 876 ; free virtual = 7758
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00.07 ; elapsed = 00:00:00.06 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 875 ; free virtual = 7756

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
INFO: [Timing 38-35] Done setting XDC timing constraints.
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: 8f7746d1

Time (s): cpu = 00:00:25 ; elapsed = 00:00:15 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 812 ; free virtual = 7694

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: c848448d

Time (s): cpu = 00:00:56 ; elapsed = 00:00:29 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 756 ; free virtual = 7639

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: c848448d

Time (s): cpu = 00:00:56 ; elapsed = 00:00:29 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 756 ; free virtual = 7639
Phase 1 Placer Initialization | Checksum: c848448d

Time (s): cpu = 00:00:56 ; elapsed = 00:00:30 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 756 ; free virtual = 7639

Phase 2 Global Placement
Phase 2 Global Placement | Checksum: 16653d07c

Time (s): cpu = 00:02:30 ; elapsed = 00:01:16 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 728 ; free virtual = 7612

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 16653d07c

Time (s): cpu = 00:02:31 ; elapsed = 00:01:16 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 728 ; free virtual = 7612

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 137a1e3bb

Time (s): cpu = 00:03:00 ; elapsed = 00:01:28 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 720 ; free virtual = 7604

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: d1ba9934

Time (s): cpu = 00:03:01 ; elapsed = 00:01:29 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 723 ; free virtual = 7607

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: fed8912c

Time (s): cpu = 00:03:01 ; elapsed = 00:01:30 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 723 ; free virtual = 7607

Phase 3.5 Timing Path Optimizer
Phase 3.5 Timing Path Optimizer | Checksum: fed8912c

Time (s): cpu = 00:03:01 ; elapsed = 00:01:30 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 723 ; free virtual = 7607

Phase 3.6 Fast Optimization
Phase 3.6 Fast Optimization | Checksum: 14ac32bf5

Time (s): cpu = 00:03:02 ; elapsed = 00:01:30 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 723 ; free virtual = 7607

Phase 3.7 Small Shape Detail Placement
Phase 3.7 Small Shape Detail Placement | Checksum: dfe87e86

Time (s): cpu = 00:03:13 ; elapsed = 00:01:40 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 708 ; free virtual = 7592

Phase 3.8 Re-assign LUT pins
Phase 3.8 Re-assign LUT pins | Checksum: 114629fe4

Time (s): cpu = 00:03:15 ; elapsed = 00:01:42 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 710 ; free virtual = 7595

Phase 3.9 Pipeline Register Optimization
Phase 3.9 Pipeline Register Optimization | Checksum: 16c72bbb6

Time (s): cpu = 00:03:15 ; elapsed = 00:01:43 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 710 ; free virtual = 7595
Phase 3 Detail Placement | Checksum: 16c72bbb6

Time (s): cpu = 00:03:16 ; elapsed = 00:01:43 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 710 ; free virtual = 7595

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: 128c253f4

Phase 4.1.1.1 BUFG Insertion
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 4 CPUs
INFO: [Place 46-33] Processed net design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/i___4_n_4, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/zhang_cnn_0/inst/ap_rst_n_inv, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0_weightsbuf_V_0_0_ce0, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/i___5_n_4, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-31] BUFG insertion identified 4 candidate nets, 0 success, 4 skipped for placement/routing, 0 skipped for timing, 0 skipped for netlist change reason.
Phase 4.1.1.1 BUFG Insertion | Checksum: 128c253f4

Time (s): cpu = 00:03:53 ; elapsed = 00:01:58 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 720 ; free virtual = 7605
INFO: [Place 30-746] Post Placement Timing Summary WNS=0.169. For the most accurate timing information please run report_timing.
Phase 4.1.1 Post Placement Optimization | Checksum: 99d613f4

Time (s): cpu = 00:04:50 ; elapsed = 00:02:28 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 717 ; free virtual = 7602
Phase 4.1 Post Commit Optimization | Checksum: 99d613f4

Time (s): cpu = 00:04:51 ; elapsed = 00:02:28 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 717 ; free virtual = 7602

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 99d613f4

Time (s): cpu = 00:04:52 ; elapsed = 00:02:29 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 717 ; free virtual = 7601

Phase 4.3 Placer Reporting
Phase 4.3 Placer Reporting | Checksum: 99d613f4

Time (s): cpu = 00:04:52 ; elapsed = 00:02:29 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 716 ; free virtual = 7601

Phase 4.4 Final Placement Cleanup
Phase 4.4 Final Placement Cleanup | Checksum: 1486d5faf

Time (s): cpu = 00:04:53 ; elapsed = 00:02:30 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 717 ; free virtual = 7602
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 1486d5faf

Time (s): cpu = 00:04:53 ; elapsed = 00:02:30 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 717 ; free virtual = 7602
Ending Placer Task | Checksum: 110883ce7

Time (s): cpu = 00:04:53 ; elapsed = 00:02:30 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 743 ; free virtual = 7628
INFO: [Common 17-83] Releasing license: Implementation
60 Infos, 13 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:05:02 ; elapsed = 00:02:36 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 743 ; free virtual = 7628
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:09 ; elapsed = 00:00:04 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 690 ; free virtual = 7618
INFO: [Common 17-1381] The checkpoint '/home/studio/VIVADO_2017/tiled_convolution/tiled_convolution.runs/impl_2/design_1_wrapper_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:18 ; elapsed = 00:00:13 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 730 ; free virtual = 7624
INFO: [runtcl-4] Executing : report_io -file design_1_wrapper_io_placed.rpt
report_io: Time (s): cpu = 00:00:00.30 ; elapsed = 00:00:00.39 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 720 ; free virtual = 7614
INFO: [runtcl-4] Executing : report_utilization -file design_1_wrapper_utilization_placed.rpt -pb design_1_wrapper_utilization_placed.pb
report_utilization: Time (s): cpu = 00:00:00.60 ; elapsed = 00:00:00.68 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 730 ; free virtual = 7623
INFO: [runtcl-4] Executing : report_control_sets -file design_1_wrapper_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00.21 ; elapsed = 00:00:00.26 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 730 ; free virtual = 7623
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 4 CPUs
Checksum: PlaceDB: 1b378d61 ConstDB: 0 ShapeSum: f550af86 RouteDB: 0

Phase 1 Build RT Design
Phase 1 Build RT Design | Checksum: 15dc7154a

Time (s): cpu = 00:00:40 ; elapsed = 00:00:27 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 591 ; free virtual = 7484
Post Restoration Checksum: NetGraph: d0c3ed84 NumContArr: 8d0327c6 Constraints: 0 Timing: 0

Phase 2 Router Initialization

Phase 2.1 Create Timer
Phase 2.1 Create Timer | Checksum: 15dc7154a

Time (s): cpu = 00:00:41 ; elapsed = 00:00:29 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 582 ; free virtual = 7476

Phase 2.2 Fix Topology Constraints
Phase 2.2 Fix Topology Constraints | Checksum: 15dc7154a

Time (s): cpu = 00:00:42 ; elapsed = 00:00:29 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 566 ; free virtual = 7460

Phase 2.3 Pre Route Cleanup
Phase 2.3 Pre Route Cleanup | Checksum: 15dc7154a

Time (s): cpu = 00:00:42 ; elapsed = 00:00:29 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 566 ; free virtual = 7460
 Number of Nodes with overlaps = 0

Phase 2.4 Update Timing
Phase 2.4 Update Timing | Checksum: f32ffb0b

Time (s): cpu = 00:01:27 ; elapsed = 00:00:46 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 517 ; free virtual = 7411
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.200  | TNS=0.000  | WHS=-0.321 | THS=-223.901|

Phase 2 Router Initialization | Checksum: 18b8d3300

Time (s): cpu = 00:01:47 ; elapsed = 00:00:53 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 510 ; free virtual = 7404

Phase 3 Initial Routing
Phase 3 Initial Routing | Checksum: 198042463

Time (s): cpu = 00:02:57 ; elapsed = 00:01:16 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 472 ; free virtual = 7367

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 2830
 Number of Nodes with overlaps = 257
 Number of Nodes with overlaps = 34
 Number of Nodes with overlaps = 11
 Number of Nodes with overlaps = 6
 Number of Nodes with overlaps = 2
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.160  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.1 Global Iteration 0 | Checksum: f516a0e2

Time (s): cpu = 00:04:22 ; elapsed = 00:01:52 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 487 ; free virtual = 7381

Phase 4.2 Global Iteration 1
 Number of Nodes with overlaps = 9
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.160  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.2 Global Iteration 1 | Checksum: 1555fa1b6

Time (s): cpu = 00:04:24 ; elapsed = 00:01:54 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 487 ; free virtual = 7381
Phase 4 Rip-up And Reroute | Checksum: 1555fa1b6

Time (s): cpu = 00:04:24 ; elapsed = 00:01:54 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 487 ; free virtual = 7381

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp
Phase 5.1 Delay CleanUp | Checksum: 1555fa1b6

Time (s): cpu = 00:04:25 ; elapsed = 00:01:54 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 487 ; free virtual = 7381

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 1555fa1b6

Time (s): cpu = 00:04:25 ; elapsed = 00:01:54 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 487 ; free virtual = 7381
Phase 5 Delay and Skew Optimization | Checksum: 1555fa1b6

Time (s): cpu = 00:04:25 ; elapsed = 00:01:54 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 487 ; free virtual = 7381

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 11d7420bd

Time (s): cpu = 00:04:32 ; elapsed = 00:01:57 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 487 ; free virtual = 7381
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.160  | TNS=0.000  | WHS=0.020  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 1a21de9c6

Time (s): cpu = 00:04:32 ; elapsed = 00:01:57 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 487 ; free virtual = 7381
Phase 6 Post Hold Fix | Checksum: 1a21de9c6

Time (s): cpu = 00:04:33 ; elapsed = 00:01:57 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 487 ; free virtual = 7381

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 18.4035 %
  Global Horizontal Routing Utilization  = 20.8083 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 18f684281

Time (s): cpu = 00:04:33 ; elapsed = 00:01:58 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 487 ; free virtual = 7381

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 18f684281

Time (s): cpu = 00:04:33 ; elapsed = 00:01:58 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 486 ; free virtual = 7381

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 1ad3d05a7

Time (s): cpu = 00:04:37 ; elapsed = 00:02:01 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 484 ; free virtual = 7379

Phase 10 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=0.160  | TNS=0.000  | WHS=0.020  | THS=0.000  |

INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary.
Phase 10 Post Router Timing | Checksum: 1ad3d05a7

Time (s): cpu = 00:04:37 ; elapsed = 00:02:01 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 484 ; free virtual = 7379
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:04:37 ; elapsed = 00:02:01 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 525 ; free virtual = 7419

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
77 Infos, 13 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:04:49 ; elapsed = 00:02:07 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 525 ; free virtual = 7419
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:10 ; elapsed = 00:00:04 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 461 ; free virtual = 7413
INFO: [Common 17-1381] The checkpoint '/home/studio/VIVADO_2017/tiled_convolution/tiled_convolution.runs/impl_2/design_1_wrapper_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:19 ; elapsed = 00:00:14 . Memory (MB): peak = 2736.980 ; gain = 0.000 ; free physical = 512 ; free virtual = 7418
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
Command: report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Coretcl 2-168] The results of DRC are in file /home/studio/VIVADO_2017/tiled_convolution/tiled_convolution.runs/impl_2/design_1_wrapper_drc_routed.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:24 ; elapsed = 00:00:09 . Memory (MB): peak = 2745.988 ; gain = 9.008 ; free physical = 483 ; free virtual = 7390
INFO: [runtcl-4] Executing : report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
Command: report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 4 threads
INFO: [Coretcl 2-1520] The results of Report Methodology are in file /home/studio/VIVADO_2017/tiled_convolution/tiled_convolution.runs/impl_2/design_1_wrapper_methodology_drc_routed.rpt.
report_methodology completed successfully
report_methodology: Time (s): cpu = 00:01:08 ; elapsed = 00:00:23 . Memory (MB): peak = 2745.988 ; gain = 0.000 ; free physical = 317 ; free virtual = 7225
INFO: [runtcl-4] Executing : report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
Command: report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
88 Infos, 13 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:00:31 ; elapsed = 00:00:15 . Memory (MB): peak = 2745.988 ; gain = 0.000 ; free physical = 265 ; free virtual = 7184
INFO: [runtcl-4] Executing : report_route_status -file design_1_wrapper_route_status.rpt -pb design_1_wrapper_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -file design_1_wrapper_timing_summary_routed.rpt -warn_on_violation  -rpx design_1_wrapper_timing_summary_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 4 CPUs
INFO: [runtcl-4] Executing : report_incremental_reuse -file design_1_wrapper_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-545] No incremental reuse to report, no incremental placement and routing data was found.
INFO: [runtcl-4] Executing : report_clock_utilization -file design_1_wrapper_clock_utilization_routed.rpt
INFO: [Common 17-206] Exiting Vivado at Thu Nov 16 14:47:22 2017...

*** Running vivado
    with args -log design_1_wrapper.vdi -applog -m64 -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace


****** Vivado v2017.3 (64-bit)
  **** SW Build 2018833 on Wed Oct  4 19:58:07 MDT 2017
  **** IP Build 2016188 on Wed Oct  4 21:52:56 MDT 2017
    ** Copyright 1986-2017 Xilinx, Inc. All Rights Reserved.

source design_1_wrapper.tcl -notrace
Command: open_checkpoint design_1_wrapper_routed.dcp

Starting open_checkpoint Task

Time (s): cpu = 00:00:00.07 ; elapsed = 00:00:00.14 . Memory (MB): peak = 1157.742 ; gain = 0.000 ; free physical = 1701 ; free virtual = 8634
INFO: [Netlist 29-17] Analyzing 2029 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 1 CPU seconds
WARNING: [Netlist 29-101] Netlist 'design_1_wrapper' is not ideal for floorplanning, since the cellview 'design_1_zhang_cnn_0_0' contains a large number of primitives.  Please consider enabling hierarchy in synthesis if you want to do floorplanning.
INFO: [Project 1-479] Netlist was created with Vivado 2017.3
INFO: [Device 21-403] Loading part xc7z020clg484-1
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution/tiled_convolution.runs/impl_2/.Xil/Vivado-8157-dante-X55C/dcp3/design_1_wrapper_board.xdc]
Finished Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution/tiled_convolution.runs/impl_2/.Xil/Vivado-8157-dante-X55C/dcp3/design_1_wrapper_board.xdc]
Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution/tiled_convolution.runs/impl_2/.Xil/Vivado-8157-dante-X55C/dcp3/design_1_wrapper_early.xdc]
Finished Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution/tiled_convolution.runs/impl_2/.Xil/Vivado-8157-dante-X55C/dcp3/design_1_wrapper_early.xdc]
Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution/tiled_convolution.runs/impl_2/.Xil/Vivado-8157-dante-X55C/dcp3/design_1_wrapper_late.xdc]
INFO: [Timing 38-35] Done setting XDC timing constraints. [/media/dati/dante/Xilinx/Vivado/2017.3/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl:2]
all_registers: Time (s): cpu = 00:00:26 ; elapsed = 00:00:42 . Memory (MB): peak = 2046.605 ; gain = 548.508 ; free physical = 807 ; free virtual = 7797
Finished Parsing XDC File [/home/studio/VIVADO_2017/tiled_convolution/tiled_convolution.runs/impl_2/.Xil/Vivado-8157-dante-X55C/dcp3/design_1_wrapper_late.xdc]
Reading XDEF placement.
Reading placer database...
Reading XDEF routing.
Read XDEF File: Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 2099.934 ; gain = 53.328 ; free physical = 757 ; free virtual = 7748
Restored from archive | CPU: 3.970000 secs | Memory: 42.028137 MB |
Finished XDEF File Restore: Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 2099.934 ; gain = 53.328 ; free physical = 757 ; free virtual = 7748
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 255 instances were transformed.
  RAM32M => RAM32M (RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMS32, RAMS32): 254 instances
  RAM32X1D => RAM32X1D (RAMD32, RAMD32): 1 instances

INFO: [Project 1-604] Checkpoint was created with Vivado v2017.3 (64-bit) build 2018833
open_checkpoint: Time (s): cpu = 00:00:57 ; elapsed = 00:01:43 . Memory (MB): peak = 2099.934 ; gain = 942.191 ; free physical = 826 ; free virtual = 7756
Command: write_bitstream -force design_1_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [DRC 23-27] Running DRC with 4 threads
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/tmp_164_reg_5219_reg input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/tmp_164_reg_5219_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mac_muljbC_U238/zhang_cnn_mac_muljbC_DSP48_5_U/p input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mac_muljbC_U238/zhang_cnn_mac_muljbC_DSP48_5_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mulibs_U237/zhang_cnn_mul_mulibs_DSP48_4_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mulibs_U237/zhang_cnn_mul_mulibs_DSP48_4_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mulibs_U237/zhang_cnn_mul_mulibs_DSP48_4_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mulibs_U237/zhang_cnn_mul_mulibs_DSP48_4_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U242/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U242/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U242/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U242/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U243/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U243/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U243/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U243/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U244/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U244/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U244/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U244/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U245/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U245/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U245/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U245/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U246/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U246/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U246/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U246/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U247/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U247/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U247/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U247/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U248/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U248/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U248/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U248/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U249/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U249/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U249/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U249/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U250/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U250/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U250/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U250/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U251/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U251/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U251/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U251/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U252/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U252/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U252/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U252/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U253/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U253/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U253/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U253/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U254/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U254/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U254/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U254/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U255/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U255/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U255/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U255/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U256/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U256/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U256/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U256/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U257/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U257/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U257/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U257/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U258/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U258/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U258/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U258/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U259/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U259/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U259/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U259/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U260/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U260/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U260/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U260/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U261/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U261/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U261/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U261/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U262/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U262/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U262/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U262/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U263/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U263/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U263/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U263/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U264/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U264/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U264/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U264/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U265/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U265/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U265/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U265/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U266/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U266/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U266/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U266/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U267/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U267/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U267/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U267/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U268/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U268/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U268/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U268/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U269/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U269/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U269/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U269/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U270/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U270/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U270/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U270/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U271/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U271/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U271/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U271/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U272/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U272/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U272/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U272/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U273/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U273/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U273/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U273/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U274/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U274/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U274/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U274/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U275/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U275/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U275/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U275/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U276/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U276/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U276/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U276/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U277/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U277/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U277/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U277/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U278/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U278/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U278/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U278/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U279/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U279/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U279/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U279/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U280/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U280/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U280/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U280/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U281/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U281/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U281/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U281/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U282/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U282/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U282/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U282/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U283/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U283/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U283/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U283/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U284/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U284/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U284/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U284/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U285/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U285/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U285/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U285/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U286/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U286/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U286/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U286/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U287/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U287/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U287/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U287/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U288/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U288/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U288/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U288/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U289/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U289/zhang_cnn_mul_mullbW_DSP48_7_U/in00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U289/zhang_cnn_mul_mullbW_DSP48_7_U/in00 input design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U289/zhang_cnn_mul_mullbW_DSP48_7_U/in00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
INFO: [Common 17-14] Message 'DRC DPIP-1' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/bound_fu_2516_p2 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/bound_fu_2516_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/bound_fu_2516_p2__0 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/bound_fu_2516_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mac_muljbC_U238/zhang_cnn_mac_muljbC_DSP48_5_U/p output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mac_muljbC_U238/zhang_cnn_mac_muljbC_DSP48_5_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_16ng8j_U235/zhang_cnn_mul_16ng8j_MulnS_0_U/buff0_reg output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_16ng8j_U235/zhang_cnn_mul_16ng8j_MulnS_0_U/buff0_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_16ng8j_U235/zhang_cnn_mul_16ng8j_MulnS_0_U/tmp_product output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_16ng8j_U235/zhang_cnn_mul_16ng8j_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_16nhbi_U236/zhang_cnn_mul_16nhbi_MulnS_1_U/buff0_reg output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_16nhbi_U236/zhang_cnn_mul_16nhbi_MulnS_1_U/buff0_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_16nhbi_U236/zhang_cnn_mul_16nhbi_MulnS_1_U/tmp_product output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_16nhbi_U236/zhang_cnn_mul_16nhbi_MulnS_1_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_16nhbi_U236/zhang_cnn_mul_16nhbi_MulnS_1_U/tmp_product__0 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_16nhbi_U236/zhang_cnn_mul_16nhbi_MulnS_1_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mulibs_U237/zhang_cnn_mul_mulibs_DSP48_4_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mulibs_U237/zhang_cnn_mul_mulibs_DSP48_4_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U242/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U242/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U243/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U243/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U244/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U244/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U245/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U245/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U246/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U246/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U247/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U247/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U248/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U248/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U249/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U249/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U250/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U250/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U251/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U251/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U252/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U252/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U253/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U253/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U254/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U254/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U255/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U255/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U256/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U256/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U257/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U257/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U258/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U258/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U259/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U259/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U260/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U260/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U261/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U261/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U262/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U262/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U263/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U263/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U264/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U264/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U265/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U265/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U266/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U266/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U267/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U267/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U268/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U268/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U269/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U269/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U270/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U270/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U271/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U271/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U272/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U272/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U273/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U273/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U274/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U274/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U275/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U275/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U276/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U276/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U277/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U277/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U278/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U278/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U279/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U279/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U280/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U280/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U281/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U281/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U282/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U282/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U283/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U283/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U284/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U284/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U285/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U285/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U286/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U286/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U287/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U287/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U288/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U288/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U289/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U289/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U290/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U290/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U291/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U291/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U292/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U292/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U293/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U293/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U294/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U294/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U295/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U295/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U296/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U296/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U297/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U297/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U298/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U298/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U299/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U299/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U300/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U300/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U301/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U301/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U302/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U302/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U303/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U303/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U304/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U304/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U305/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U305/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U306/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U306/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U307/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U307/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U308/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U308/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U309/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U309/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U310/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U310/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U311/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U311/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U312/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U312/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U313/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U313/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U314/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U314/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U315/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U315/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U316/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U316/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U317/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U317/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U318/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U318/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U319/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U319/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U320/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U320/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U321/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U321/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U322/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U322/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U323/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U323/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U324/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U324/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U325/zhang_cnn_mul_mullbW_DSP48_7_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U325/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp1_fu_602_p2 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp1_fu_602_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp37_fu_590_p2__0 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp37_fu_590_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp_70_fu_414_p2 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp_70_fu_414_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp_72_fu_424_p2 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp_72_fu_424_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp_74_fu_433_p2 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp_74_fu_433_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp_91_fu_598_p2__0 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp_91_fu_598_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/zhang_cnn_mul_mulcud_U2/zhang_cnn_mul_mulcud_DSP48_0_U/in00 output design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/zhang_cnn_mul_mulcud_U2/zhang_cnn_mul_mulcud_DSP48_0_U/in00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
INFO: [Common 17-14] Message 'DRC DPOP-1' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/bound_fu_2516_p2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/bound_fu_2516_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/bound_fu_2516_p2__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/bound_fu_2516_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/bound_reg_5060_reg__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/bound_reg_5060_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/bound_reg_5060_reg__2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/bound_reg_5060_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/tmp_146_reg_5224_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/tmp_146_reg_5224_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/tmp_164_reg_5219_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/tmp_164_reg_5219_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mac_muljbC_U238/zhang_cnn_mac_muljbC_DSP48_5_U/p multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mac_muljbC_U238/zhang_cnn_mac_muljbC_DSP48_5_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mulibs_U237/zhang_cnn_mul_mulibs_DSP48_4_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mulibs_U237/zhang_cnn_mul_mulibs_DSP48_4_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U242/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U242/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U243/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U243/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U244/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U244/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U245/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U245/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U246/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U246/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U247/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U247/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U248/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U248/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U249/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U249/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U250/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U250/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U251/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U251/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U252/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U252/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U253/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U253/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U254/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U254/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U255/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U255/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U256/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U256/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U257/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U257/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U258/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U258/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U259/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U259/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U260/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U260/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U261/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U261/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U262/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U262/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U263/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U263/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U264/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U264/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U265/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U265/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U266/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U266/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U267/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U267/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U268/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U268/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U269/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U269/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U270/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U270/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U271/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U271/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U272/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U272/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U273/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U273/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U274/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U274/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U275/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U275/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U276/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U276/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U277/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U277/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U278/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U278/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U279/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U279/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U280/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U280/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U281/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U281/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U282/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U282/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U283/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U283/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U284/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U284/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U285/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U285/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U286/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U286/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U287/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U287/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U288/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U288/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U289/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U289/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U290/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U290/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U291/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U291/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U292/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U292/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U293/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U293/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U294/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U294/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U295/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U295/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U296/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U296/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U297/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U297/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U298/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U298/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U299/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U299/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U300/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U300/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U301/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U301/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U302/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U302/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U303/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U303/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U304/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U304/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U305/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U305/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U306/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U306/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U307/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U307/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U308/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U308/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U309/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U309/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U310/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U310/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U311/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U311/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U312/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U312/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U313/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U313/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U314/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U314/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U315/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U315/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U316/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U316/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U317/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U317/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U318/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U318/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U319/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U319/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U320/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U320/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U321/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U321/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U322/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U322/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U323/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U323/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U324/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U324/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U325/zhang_cnn_mul_mullbW_DSP48_7_U/in00 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/convolve4_U0/zhang_cnn_mul_mullbW_U325/zhang_cnn_mul_mullbW_DSP48_7_U/in00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp1_fu_602_p2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp1_fu_602_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp1_reg_1178_reg__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp1_reg_1178_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp37_fu_590_p2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp37_fu_590_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp37_fu_590_p2__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp37_fu_590_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp37_reg_1163_reg__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp37_reg_1163_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp_109_reg_1268_reg multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp_109_reg_1268_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp_70_fu_414_p2 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp_70_fu_414_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp_70_reg_1126_reg__0 multiplier stage design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_input_fu_1948/tmp_70_reg_1126_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Common 17-14] Message 'DRC DPOP-2' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC DPREG-4] DSP48E1_PregDynOpmodeZmuxP:: The DSP48E1 cell design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/dataflow_out_channel_U0/grp_dataflow_in_channels_fu_640/read_in_wh81_U0/grp_read_weights_fu_1767/tmp_49_reg_2513_reg with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
WARNING: [DRC DPREG-4] DSP48E1_PregDynOpmodeZmuxP:: The DSP48E1 cell design_1_i/zhang_cnn_0/inst/grp_dataflow_out_channel_1_fu_663/write_output_U0/tmp_53_i_i_i_i_reg_1051_reg with the given dynamic OPMODE[6:0] connections may lead to an unregistered asynchronous feedback path without the PREG attribute enabled. Please refer to the user guide and if one of the internal P feedback opmodes is possible for this design the PREG attribute must be set to 1, currently set to 0
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[0] (net: design_1_i/zhang_cnn_0/m_axi_gmem_RVALID) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[1] (net: design_1_i/zhang_cnn_0/m_axi_gmem_RVALID) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[2] (net: design_1_i/zhang_cnn_0/m_axi_gmem_RVALID) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[3] (net: design_1_i/zhang_cnn_0/m_axi_gmem_RVALID) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRARDADDR[10] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRARDADDR[11] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRARDADDR[12] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRARDADDR[5] (net: design_1_i/zhang_cnn_0/mem_reg_i_8_n_4) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRARDADDR[6] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[1]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRARDADDR[7] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[2]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRARDADDR[8] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[3]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRARDADDR[9] (net: design_1_i/zhang_cnn_0/inst/zhang_cnn_gmem_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC RTSTAT-10] No routable loads: 15 net(s) have no routable loads. The problem bus(es) and/or net(s) are design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/user_valid, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/user_valid, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/user_valid, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, and design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 475 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Project 1-821] Please set project.enableDesignId to be 'true'.
INFO: [Designutils 20-2272] Running write_bitstream with 4 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./design_1_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-120] WebTalk data collection is mandatory when using a WebPACK part without a full Vivado license. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-186] '/home/studio/VIVADO_2017/tiled_convolution/tiled_convolution.runs/impl_2/usage_statistics_webtalk.xml' has been successfully sent to Xilinx on Thu Nov 16 14:51:19 2017. For additional details about this file, please refer to the WebTalk help file at /media/dati/dante/Xilinx/Vivado/2017.3/doc/webtalk_introduction.html.
INFO: [Common 17-83] Releasing license: Implementation
21 Infos, 316 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:01:37 ; elapsed = 00:00:48 . Memory (MB): peak = 2587.059 ; gain = 487.125 ; free physical = 722 ; free virtual = 7663
INFO: [Common 17-206] Exiting Vivado at Thu Nov 16 14:51:19 2017...
